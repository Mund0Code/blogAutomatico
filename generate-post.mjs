import fs from 'fs';
import path from 'path';
import Groq from 'groq-sdk';
import { createApi } from 'unsplash-js';

// --- CONFIGURACI√ìN DE APIS ---
// El script tomar√° las claves de las variables de entorno
// que configuraste en los secretos de GitHub.

// Configuraci√≥n de la API de Groq para texto
const groq = new Groq({
    apiKey: process.env.GROQ_API_KEY
});

// Configuraci√≥n de la API de Unsplash para im√°genes
const unsplash = createApi({
  accessKey: process.env.UNSPLASH_ACCESS_KEY,
});


// --- FUNCI√ìN PRINCIPAL ---
async function main() {
    console.log('ü§ñ Iniciando la generaci√≥n de un nuevo post...');

    // 1. Generar un t√≠tulo para el art√≠culo
    const topicPrompt = "Genera un t√≠tulo atractivo y corto para un art√≠culo de blog sobre un tema de actualidad en tecnolog√≠a o programaci√≥n. Por ejemplo: 'Novedades de JavaScript en 2025' o 'Introducci√≥n a la computaci√≥n cu√°ntica'. Dame solo el t√≠tulo, sin comillas ni texto adicional.";
    const topicResponse = await groq.chat.completions.create({
        messages: [{ role: 'user', content: topicPrompt }],
        model: 'llama3-8b-8192',
    });
    const title = topicResponse.choices[0]?.message?.content.trim();

    if (!title) {
        console.error('Error: No se pudo generar un t√≠tulo.');
        return process.exit(1); // Termina el script con un c√≥digo de error
    }
    console.log(`‚ú® T√≠tulo generado: ${title}`);

    // 2. Generar el contenido del art√≠culo
    const contentPrompt = `Escribe un art√≠culo de blog completo en espa√±ol sobre el tema: "${title}". El art√≠culo debe tener una introducci√≥n, varios p√°rrafos de desarrollo y una conclusi√≥n. Utiliza formato Markdown. Incluye encabezados (##) para las secciones y usa negritas para t√©rminos importantes. El tono debe ser informativo y accesible.`;
    const contentResponse = await groq.chat.completions.create({
        messages: [{ role: 'user', content: contentPrompt }],
        model: 'llama3-70b-8192', // Usamos un modelo m√°s potente para el contenido
    });
    const content = contentResponse.choices[0]?.message?.content.trim();

    if (!content) {
        console.error('Error: No se pudo generar el contenido.');
        return process.exit(1);
    }
    console.log('‚úÖ Contenido del art√≠culo generado.');

    // 3. Buscar una imagen en Unsplash
    let imageUrl = 'https://images.unsplash.com/photo-1518770660439-4636190af475'; // URL de fallback por si falla la b√∫squeda
    try {
        console.log(`üñºÔ∏è  Buscando imagen para: "${title}"`);
        const imageResult = await unsplash.search.getPhotos({
            query: title,
            page: 1,
            perPage: 1,
            orientation: 'landscape',
        });

        if (imageResult.response && imageResult.response.results.length > 0) {
            imageUrl = imageResult.response.results[0].urls.regular;
            console.log(`‚úÖ Imagen encontrada: ${imageUrl}`);
        } else {
            console.log('‚ö†Ô∏è No se encontr√≥ una imagen, se usar√° una por defecto.');
        }
    } catch (error) {
        console.error('Error al buscar la imagen en Unsplash:', error.message);
        console.log('Usando imagen por defecto debido al error.');
    }

    // 4. Crear el archivo del post en formato Markdown
    const today = new Date();
    const date = today.toISOString().split('T')[0]; // Formato YYYY-MM-DD
    const slug = title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '');
    const filePath = path.join('src/content/blog', `${slug}.md`);

    // El frontmatter ahora incluye el campo 'heroImage'
    const fileContent = `---
title: "${title.replace(/"/g, '\\"')}"
pubDate: ${date}
description: "Un resumen del art√≠culo sobre ${title.replace(/"/g, '\\"')}"
author: "Blog Automatizado"
heroImage: "${imageUrl}"
tags: ["tecnolog√≠a", "programaci√≥n", "ia"]
---

${content}
`;

    fs.writeFileSync(filePath, fileContent);
    console.log(`üíæ ¬°√âxito! Nuevo post guardado en: ${filePath}`);
}

// --- EJECUCI√ìN DEL SCRIPT ---
main().catch(error => {
    console.error('Ocurri√≥ un error inesperado en la ejecuci√≥n:', error);
    process.exit(1); // Termina el script con un c√≥digo de error
});
